#include <Wire.h>  
#include <TimeLib.h>  
#include <avr/pgmspace.h>
#include <string.h>
#include "DS3232RTC.h"  // DS3232 library that returns time as a time_t
bool Dot = true;  //Dot state
int Mode = 1; // Mode
int Button = 0;
int ScoreL; // Score Local
int ScoreV; // Score Visitor

char buffer[64];
size_t buflen;

int buttonPin1 = 4;
int buttonPin2 = 3;
int buttonPin3 = 2;
int buzzerPin = 13;

int tSeconds=10, tMinutes=0, hours=0;  //this line, along with another line in void timerFunction(), is where you can adjust the amount of time that is counted down in                                                                    //the timer function
int centiseconds=0, sSeconds=0, sMinutes=0;

int button1Counter = 0;  //this section initializes the button counters, which is how the buttons can have multiple operations within the same function - more info:       
int button1State = 0;        // http://arduino.cc/en/Tutorial/ButtonStateChange
int lastButton1State = 0;
int button2Counter = 0;
int button2State = 0;
int lastButton2State = 0;

void setup(){ 
  Serial.begin(9600); 
} 

void ReadSerial(){
// Modifier... Button 1: mode 1 => 2 (+ Reset timer) => 3,  Button 2: Play Button 3: Pause, 4 + 5 - 6 + 7 - 
    if (Serial.available()) {
        // Process serial input for commands from the host.
        int ch = Serial.read();
        if (ch == 0x0A || ch == 0x0D) {
            // End of the current command.  Blank lines are ignored.
            if (buflen > 0) {
                buffer[buflen] = '\0';
                buflen = 0;
                Serial.print("buffer : "); Serial.println(buffer);
                int Temp=atoi(buffer);
                if (Temp == 1){Mode=1;}
                else if (Temp == 2){Mode=2;}
                else if (Temp == 3){Mode=3;}
                else if (Temp == 4){Button=4;}
                else if (Temp == 5){Button=5;}
                else if (Temp == 6){Button=6;}
                else if (Temp == 7){Button=7;}
            }
        } else if (ch == 0x08) {
            // Backspace over the last character.
            if (buflen > 0)
                --buflen;
        } else if (buflen < (sizeof(buffer) - 1)) {
            // Add the character to the buffer after forcing to upper case.
            if (ch >= 'a' && ch <= 'z')
                buffer[buflen++] = ch - 'a' + 'A';
            else
                buffer[buflen++] = ch;
        }
    }
}


int GetTimer(){
  tmElements_t Now;
  RTC.read(Now);
  //time_t Now = RTC.Now();// Getting the current Time and storing it into a DateTime object 
  
  int hour=Now.Hour;
  int minutes=Now.Minute;
  int second =Now.Second;
  if (second % 2==0) {Dot = false;}
    else {Dot = true;};
  //Serial.print("Time is: "); Serial.println(hour*100+minutes);
  return (hour*100+minutes);
  };
  
int GetTime(){
  tmElements_t Now;
  RTC.read(Now);
  //time_t Now = RTC.Now();// Getting the current Time and storing it into a DateTime object 
  
  int hour=Now.Hour;
  int minutes=Now.Minute;
  int second =Now.Second;
  if (second % 2==0) {Dot = false;}
    else {Dot = true;};
  //Serial.print("Time is: "); Serial.println(hour*100+minutes);
  return (hour*100+minutes);
  };
  
void TimeAdjust(){
    tmElements_t Now;
    RTC.read(Now);
    if (Button == 4){
      if (Now.Hour== 23){Now.Hour=0;}
        else {Now.Hour += 1;};
    }
    if (Button == 5){
      if (Now.Hour== 0){Now.Hour=23;}
        else {Now.Hour -= 1;};
    }
    if (Button == 6){
      if (Now.Minute== 59){Now.Minute=0;}
        else {Now.Minute += 1;};
    }
    if (Button == 7){
      if (Now.Minute== 0){Now.Minute=59;}
        else {Now.Minute -= 1;};
    }
    RTC.write(Now); 
    
  }  
  
  
void ScoreAdjust(){
    if (Button == 4){
      ScoreL += 1;
    }
    if (Button == 5){
      if (ScoreL > 0){
        ScoreL -= 1;
      }
    }
    if (Button == 6){
      ScoreV += 1;
    }
    if (Button == 7){
      if (ScoreL > 0){
        ScoreV -= 1;
      }
    }
  }  

void TimeToArray(){
  int Now = GetTime();  // Get time
  for(int i=1;i<=4;i++){
    int digit = Now % 10; // get last digit in time
    if (i==1){
      Serial.print("Digit 4 is : ");Serial.print(digit);Serial.print(" ");
    }
    else if (i==2){
      Serial.print("Digit 3 is : ");Serial.print(digit);Serial.print(" ");
    }
    else if (i==3){
      Serial.print("Digit 2 is : ");Serial.print(digit);Serial.print(" ");
    }
    else if (i==4){
      Serial.print("Digit 1 is : ");Serial.print(digit);Serial.print(" ");
    }
    Now /= 10;
  } 
  Serial.println(); 
}

void ShowTime(){
    int Now = GetTimer();
    int hour = Now / 100;
    int min = Now % 100;
    Serial.print(hour);Serial.print(":");Serial.print(min);Serial.print(" ");
    Serial.println(" "); 
}

void ShowScore(){
    int Now = GetTime();
    Serial.print("LLHC : ");Serial.print(ScoreL);Serial.print(" ");
    int hour = Now / 100;
    int min = Now % 100;
    Serial.print(hour);Serial.print(":");Serial.print(min);Serial.print(" ");
    Serial.print("VISITOR : ");Serial.print(ScoreV);
    Serial.println(" "); 
}

void loop(){
  ReadSerial();
  switch(Mode){
  case 1:  //the clock defaults to clockFunction()
        if (Button != 0){
          TimeAdjust();
          Button = 0;
          //delay(1000);
        }
        
	ShowTime();
  break;
  case 2:  //Switches to timerFunction()
        if (Button != 0){
          ScoreAdjust();
          Button = 0;
          //delay(1000);
        }
	ShowScore();
  break;
  }
  //delay(10000);
  
}
